{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookmarkService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7158/api/bookmark';\n  }\n  getBookmarks() {\n    return this.http.get(this.baseUrl);\n  }\n  addBookmark(bookmark) {\n    return this.http.post(this.baseUrl, bookmark);\n  }\n  deleteBookmark(bookmarkId) {\n    const url = `${this.baseUrl}/${bookmarkId}`;\n    return this.http.delete(url);\n  }\n}\nBookmarkService.ɵfac = function BookmarkService_Factory(t) {\n  return new (t || BookmarkService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookmarkService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookmarkService,\n  factory: BookmarkService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,YAAO,GAAG,qCAAqC;EAExB;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,OAAO,CAAC;EAChD;EAEAC,WAAW,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAW,IAAI,CAACH,OAAO,EAAEE,QAAQ,CAAC;EACzD;EAEAE,cAAc,CAACC,UAAkB;IAC/B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACN,OAAO,IAAIK,UAAU,EAAE;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACU,MAAM,CAACD,GAAG,CAAC;EAC9B;;AAhBWX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;EAAAc,YAFd;AAAM","names":["BookmarkService","constructor","http","getBookmarks","get","baseUrl","addBookmark","bookmark","post","deleteBookmark","bookmarkId","url","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aneet\\OneDrive\\Documents\\CTU\\WIL\\SLD\\WILProject1\\ClientApp\\src\\app\\Services\\bookmark.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Bookmark } from '../Models/bookmark.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookmarkService {\r\n  private readonly baseUrl = 'https://localhost:7158/api/bookmark';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBookmarks(): Observable<Bookmark[]> {\r\n    return this.http.get<Bookmark[]>(this.baseUrl);\r\n  }\r\n\r\n  addBookmark(bookmark: Bookmark): Observable<Bookmark> {\r\n    return this.http.post<Bookmark>(this.baseUrl, bookmark);\r\n  }\r\n\r\n  deleteBookmark(bookmarkId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${bookmarkId}`;\r\n    return this.http.delete(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}