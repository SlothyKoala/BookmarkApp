{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class BookmarkService {\n  constructor() {\n    this.bookmarks = [{\n      id: 1,\n      name: 'Bookmark 1',\n      category: 'Category 1',\n      language: 'Language 1',\n      dateAdded: new Date()\n    }, {\n      id: 2,\n      name: 'Bookmark 2',\n      category: 'Category 2',\n      language: 'Language 2',\n      dateAdded: new Date()\n    }];\n  }\n  getAllBookmarks() {\n    return this.bookmarks;\n  }\n  getBookmarkById(id) {\n    return this.bookmarks.find(bookmark => bookmark.id === id);\n  }\n}\nBookmarkService.ɵfac = function BookmarkService_Factory(t) {\n  return new (t || BookmarkService)();\n};\nBookmarkService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookmarkService,\n  factory: BookmarkService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,eAAe;EAH5BC;IAIU,cAAS,GAAe,CAC9B;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,YAAY;MAAEC,QAAQ,EAAE,YAAY;MAAEC,QAAQ,EAAE,YAAY;MAAEC,SAAS,EAAE,IAAIC,IAAI;IAAE,CAAE,EACpG;MAAEL,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,YAAY;MAAEC,QAAQ,EAAE,YAAY;MAAEC,QAAQ,EAAE,YAAY;MAAEC,SAAS,EAAE,IAAIC,IAAI;IAAE,CAAE,CACrG;;EAEDC,eAAe;IACb,OAAO,IAAI,CAACC,SAAS;EACvB;EAEAC,eAAe,CAACR,EAAU;IACxB,OAAO,IAAI,CAACO,SAAS,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACV,EAAE,KAAKA,EAAE,CAAC;EAC5D;;AAZWF,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;EAAAc,YAFd;AAAM","names":["BookmarkService","constructor","id","name","category","language","dateAdded","Date","getAllBookmarks","bookmarks","getBookmarkById","find","bookmark","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aneet\\OneDrive\\Documents\\CTU\\WIL\\SLD\\WIL_Project_1\\ClientApp\\src\\app\\Services\\bookmark.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Bookmark } from '../Models/bookmark.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarkService {\n  private bookmarks: Bookmark[] = [\n    { id: 1, name: 'Bookmark 1', category: 'Category 1', language: 'Language 1', dateAdded: new Date() },\n    { id: 2, name: 'Bookmark 2', category: 'Category 2', language: 'Language 2', dateAdded: new Date() },\n  ];\n\n  getAllBookmarks(): Bookmark[] {\n    return this.bookmarks;\n  }\n\n  getBookmarkById(id: number): Bookmark | undefined {\n    return this.bookmarks.find(bookmark => bookmark.id === id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}